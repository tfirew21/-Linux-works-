#!/bin/bash

#First Commit

#Here you are moving the file from the directory you downloaded the lab in and moving it into the Ubuntu environment.
sudo mv /mnt/c/Users/<your_windows_username>/<folder of lab Downloads>/labsusers.pem ~

sudo chmod 400 labsusers.pem

echo "What's the public ip of the lab?"

read  public_ip

lab_login="ssh -i labsuser.pem ec2-user@"$public_ip""

if [[ "$lab_login" ]]; then  

<<<<<<< HEAD
	echo "Great Success!!!"
=======
	echo "Great Success"
>>>>>>> 0fcd064d15c177a1c4f27e30f6320d986408f191
else
	echo "You failed. Try again later"
fi

CREATHING A NEW SSH KEYS 

*Run command: ~/.ssh first. This will navigate you to your ssh folder. This is where you will save your keys*
1. Run command:  ssh-keygen -T ed25519 -C “comment name”
* First prompt is for ssh key name
* Next prompt is for password (optional)
2. Cd to ~/.ssh folder 
3. There will be two keys in the folder (one private {ssh keyname} and one public {ssh keyname.pub} )
4. Run command: cat (ssh key name).pub
5. Copy ssh public key to clipboard
6. Navigate to Github settings
7. Go to SSH and GPG Keys tab
8. Click on New SSH key and name your key
9. Paste your key into the description (make sure the beginning of your key starts with ‘ssh’
10. Click Add SSH key
11. Go back to terminal and run command: chmod 400 {private key name}
12. Run command: Ssh-add {private key} (This authenticates the ssh key with our ssh agent)
13. Run Command: touch config  && chmod 600 config
14. Run Command: nano config
15. Type in the following information in config file: 
Host Github
User [Github Name]
        Port 22 (For ssh)
        IdentifyFile ~/.ssh/”(your private Github key)”
        HostName https://www.github.com/
16. Save file and exit using command O to save, then command X to exit.
17. Run command: ssh git@github.com -T (This successfully authenticates connection between local host and remote host)Testingls= list all file

pwd= display current working directoy
mkdir = directory
rm= remove
rm -f = Force removal of file without prompting
cd dir = mske directory
cd ~ = change home directory
ls = list directory
chmod= change mode
chown=
rm= remove file
cp = copy
touch = make file
cat=
tail= to show ten line of the file
ls -l
ls -la
ls-lah
cd Directory
cd Documents
cat -n 
rmdir 
grep
sudo
su
df
du
tail
diff
tar
tope
kill
weget downloading file
nano 
touch filename.text
vi filename.sh
| to devede the numbers or vaalue
WHILE LOOP=#!/bin/sh
a=10
until [ $a -lt 10 ]
do
   echo $a
   a=`expr $a + 1`
done
This loop continues forever because a is always greater than or equal to 10 and it is never less than 10.
The break Statement
The break statement is used to terminate the execution of the entire loop, after completing the execution of all of the lines of code up to the break statement. 
Here is a simple example which shows that loop terminates as soon as a becomes 5 −
#!/bin/sh
a=0
while [ $a -lt 10 ]
do
   echo $a
   if [ $a -eq 5 ]
   then
      break
   fi
   a=`expr $a + 1`
   DONE
   Upon execution, you will receive the following result −
0
1
2
3
4
5
﻿CREATTHING A NEW SSH KEY 
*Run command: ~/.ssh first. This will navigate you to your ssh folder. This is where you will save your keys*
1. Run command:  ssh-keygen -T ed25519 -C “comment name”
* First prompt is for ssh key name
* Next prompt is for password (optional)
2. Cd to ~/.ssh folder 
3. There will be two keys in the folder (one private {ssh keyname} and one public {ssh keyname.pub} )
4. Run command: cat (ssh key name).pub
5. Copy ssh public key to clipboard
6. Navigate to Github settings
7. Go to SSH and GPG Keys tab
8. Click on New SSH key and name your key
9. Paste your key into the description (make sure the beginning of your key starts with ‘ssh’
10. Click Add SSH key
11. Go back to terminal and run command: chmod 400 {private key name}
12. Run command: Ssh-add {private key} (This authenticates the ssh key with our ssh agent)
13. Run Command: touch config  && chmod 600 config
14. Run Command: nano config
15. Type in the following information in config file: 
Host Github
User [Github Name]
        Port 22 (For ssh)
        IdentifyFile ~/.ssh/”(your private Github key)”
        HostName https://www.github.com/
16. Save file and exit using command O to save, then command X to exit.
17. Run command: ssh git@github.com -T (This successfully authenticates connection between local host and remote host)Testing
